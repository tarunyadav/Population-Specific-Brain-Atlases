function [Image] = non_linear_feature_mapping(n_x,n_y,src_points, dst_points,Image)
     Image_old=Image; 
     for i=1:256
         for j=1:256
               Image(i,j)=0;
         end
     end
    for x=30:210
         for y=30:210
                i=floor(y/10)-1;
                j=floor(x/10)-1;
               % u=x/18-floor(x/18);
                %v=y/18-floor(x/18);
                u=x/256;
                v=y/256;
                %BERNSTEIN_u = bernstein_poly(2,u);
                %BERNSTEIN_v=  bernstein_poly(2,v);
                BERNSTEIN_u = ;
                BERNSTEIN_v=  bernstein_poly(2,v);
                A=[0 0];
                if(i<0 || j<0)
                     i=0;
                     j=0;
                end
                for l=0:2
                    for m=0:2
                        %if(i+l-1>=0 && i+l<=4 && j+m>=0 && j+m<4 )
                           if ((i+l)*n_y +(j+m)+1<size(dst_points,1))
                            A=A+ BERNSTEIN_u(1,l+1)*BERNSTEIN_v(1,m+1)*dst_points((i+l)*n_y +(j+m)+1,:);
                            %disp((i+l)*n_y +(j+m)+1);
                          end
                    end
                end
                fprintf(' x,y are %d,%d and new_x,new_y are %d, %d\n',x,y,round(A(1)),round(A(2)));
                if (round(A(1))>0 && round(A(2))>0)
                    Image(round(A(1)),round(A(2)))=Image_old(x,y);
                end
                       %Image(x,y)=0;
         end
    end
end